// <auto-generated />
using System;
using GamesWay.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamesWay.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231018125201_LogSessions")]
    partial class LogSessions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamesWay.Models.LogSessions", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndOfSubscription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Msisdn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubscriberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SessionId");

                    b.HasIndex("Msisdn");

                    b.HasIndex("SubscriberId");

                    b.ToTable("LogSessions");
                });

            modelBuilder.Entity("GamesWay.Models.Subscribers", b =>
                {
                    b.Property<string>("SubscriberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsFreeTrial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("bit");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msisdn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriberId");

                    b.HasIndex("Msisdn");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("GamesWay.Models.Transactions", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfSubscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndOfSubscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackageAmount")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionId2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GamesWay.Models.LogSessions", b =>
                {
                    b.HasOne("GamesWay.Models.Subscribers", "Subscriber")
                        .WithMany("LogSessions")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("GamesWay.Models.Transactions", b =>
                {
                    b.HasOne("GamesWay.Models.Subscribers", "Subscriber")
                        .WithMany("Transactions")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("GamesWay.Models.Subscribers", b =>
                {
                    b.Navigation("LogSessions");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
